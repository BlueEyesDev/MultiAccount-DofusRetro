<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIEAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAAikqAAIxMgACMzQAAjU2AAI3OAACODkAAj0+AAs9PQACP0AAAkFCAAFERQADR0gAAUhJAAJL
        TAACTU0AA1BPAANRUgACU1QAAlVVAANXWAADWFkAA1tcAAJdXQADe1MAA19gAARfYAAUX2AAAmFiAAdj
        YwAEY2QAA2VmAARlZgADZ2gABGdoAANpaQAEaWoAA2tsAAFtbgAEbW4ABHFnAAR7YAADeWcABXZuAAR8
        awAAb3AABG5wAANxcgAEcXIABHRxAAJzdAAEc3QAA3Z2AAR1dgAIc3MAAnd4AAR3eAADeXoABHh5AAR9
        fgAQcHEAFXZ2ABt8fQAtcHAAPnl6AAb+AAAU/w4AF+8SABj+EgAo/yMAMZJqAAp/gAAAgoMABICBAAOD
        hAAFg4QAAoSFAAWFhgAAh4gAAYmKAAWJigAFi4wAA42OAASMjQAbgIEAHoCBAB2JiQACj5AADo+QAAOQ
        kQAFkZEABJOVAAGUlQAFlJUAA5mbAASZmgAFm5wAEpGSACCOjwAmjIwAN4CAADiHiAA3k4sAKJKTACiX
        lwAzkpMAMJOUADuZmQABnqAABp+gAAagoQAApKYABqSlAAGnqQAFqaoABKytABqiowAcpKQABK+wAAOw
        sQAEsbIABLO1AAW1tgAEuLoABLu9AAS8vgAOursANaipADWrrABJg4MASIqLAEuTkwBPnJ0AVJeXAFqS
        kgBWnp4AZZeXAGmSkgBvnZ0AcJ2dAECxsgBKtrcASLi5AF60tQBet7gAZq6vAHCjowB3oqIAYrKyAGWy
        swBps7QAbLa3AG25ugAAv8EABcDCAAbCxAAGxMUABczOAAPP0QAFz9EAANHSAAXR0wAG09UABdTWAAXZ
        2gAF2twADtvcABHc3gA3wcIAO8bHADLHyAA2ycoAOcvMAAPe4AAF3uAAAODiAAXh4gAB4uQABeLkAADl
        5wAF5OYABeboAA7n6QAC6esABejqAAXq7AAR4uMAHuXmABPo6gAA/f8AIuPlAFXGxwBJ0tMAU9rbAEDo
        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
        A///wAf//+AP///wH////H//
</value>
  </data>
</root>